datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  posts     Post[]
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Profile {
  id       Int      @id @default(autoincrement())
  bio      String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  birthday DateTime
}

model Post {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  title             String
  content           String
  published         Boolean             @default(false)
  author            User                @relation(fields: [authorId], references: [id])
  authorId          Int
  categories        Category[]          @relation(references: [id])
  CategoriesOnPosts CategoriesOnPosts[]
}

model Category {
  id                Int                 @id @default(autoincrement())
  name              String
  posts             Post[]              @relation(references: [id])
  CategoriesOnPosts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  createdAt  DateTime @default(now())

  @@id([postId, categoryId])
}
